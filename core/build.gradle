apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "REMOTE_ID_BATCH_SIZE", '200'
            buildConfigField "int", "REMOTE_ID_RESERVE", '50'
            buildConfigField "int", "REMOTE_ID_SOURCE", '1'
            buildConfigField "String", "BASE_URL", '"https://smartcerv.bluecodeltd.com"'
            buildConfigField "String", "BASE_ROUTE", '"/middleware/rest/"'
            buildConfigField "String", "BUILD_DATE", 'new java.text.SimpleDateFormat("dd MMMM yyyy").format(new java.util.Date(System.currentTimeMillis()))'
        }

        debug{
            buildConfigField "int", "REMOTE_ID_BATCH_SIZE", '10'
            buildConfigField "int", "REMOTE_ID_RESERVE", '5'
            buildConfigField "int", "REMOTE_ID_SOURCE", '1'
            buildConfigField "String", "BASE_URL", '"https://openmrs.bluecodeltd.com"'
            buildConfigField "String", "BASE_ROUTE", '"/middleware/rest/"'
            buildConfigField "String", "BUILD_DATE", 'new java.text.SimpleDateFormat("dd MMMM yyyy").format(new java.util.Date(System.currentTimeMillis()))'
        }
    }
    buildToolsVersion '28.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'androidx.appcompat:appcompat:1.1.0-alpha01'
    api 'androidx.legacy:legacy-support-core-utils:1.0.0'
    api 'com.google.android.material:material:1.1.0-alpha01'
    testImplementation 'junit:junit:4.12'
    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.7.22'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    androidTestImplementation 'androidx.test:runner:1.1.1-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1-beta01'

    // Room components
    api "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    // Lifecycle components
    api 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'

    //Worker manager
    api "androidx.work:work-runtime:$workerVersion"

    //Retrofit
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-moshi:2.4.0'
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // RxJava
    api 'io.reactivex.rxjava2:rxjava:2.2.2'
    api 'io.reactivex.rxjava2:rxandroid:2.1.0'
    //test
    testImplementation 'org.mockito:mockito-core:2.8.9'
    //Dagger2
    api 'com.google.dagger:dagger-android:2.15'
    api 'com.google.dagger:dagger-android-support:2.15'

    //ThreeTen
    api 'com.jakewharton.threetenabp:threetenabp:1.1.1'

    // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'

    //Butter Knife
    api 'com.jakewharton:butterknife:9.0.0-rc2'

    api 'com.google.guava:guava:27.0.1-android'

    api 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'

    api 'com.android.support:recyclerview-v7:28.0.0'
    api 'com.android.support:support-annotations:28.0.0'
    api 'com.github.bumptech.glide:glide:4.9.0'
    api 'com.android.support:support-annotations:28.0.0'
}